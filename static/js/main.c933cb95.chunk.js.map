{"version":3,"sources":["Components/statistics.js","Assets/Refresh_icon.png","Components/scrambler.js","Components/timer.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","state","record","ao5","ao12","ao50","best","worst","session_average","session_mean","full_record","x_axis","width","window","innerWidth","avg_of_5","bind","avg_of_12","avg_of_50","stringToInt","clearRecord","getBest","getWorst","getSessionAvg","deleteLastSolve","generateX","addEventListener","this","handleSpace","setInterval","setState","getSessionMean","removeEventListener","array","map","Number","labels","i","props","length","concat","session","sort","a","b","shift","pop","solves","x","reduce","toFixed","graph","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","isTablet","isSmall_Desktop","Fragment","id","Row","Col","md","xs","Button","variant","onClick","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","React","Component","Scrambler","scramble","time","solve_started","shuffle","removeDuplicates","getRandomInt","refreshScramble","refreshOnSolve","document","clearTimeout","refresh","console","log","temporaryValue","randomIndex","scr_array","currentIndex","Math","floor","random","len","canDelete","splice","max","array_1","array_2","array_3","array_4","final_scr","join","setTimeout","src","alt","Timer","start","isOn","result","startTimer","stopTimer","resetTimer","handleWindowSizeChange","e","keyCode","Date","now","timer","ms","exportTime","clearInterval","replace","onKeyUp","tabIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yVA6ZeA,G,yDAvZb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQ,GACRC,IAAK,EACLC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,gBAAiB,EACjBC,aAAc,EACdC,YAAa,GACbC,OAAQ,GACRC,MAAOC,OAAOC,YAGhB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAKK,QAAU,EAAKA,QAAQL,KAAb,gBACf,EAAKM,SAAW,EAAKA,SAASN,KAAd,gBAChB,EAAKO,cAAgB,EAAKA,cAAcP,KAAnB,gBACrB,EAAKQ,gBAAkB,EAAKA,gBAAgBR,KAArB,gBACvB,EAAKS,UAAY,EAAKA,UAAUT,KAAf,gBAzBL,E,gEA4BO,IAAD,OAClBH,OAAOa,iBAAiB,WAAYC,KAAKC,aAAa,GACtDC,aAAY,kBAAM,EAAKC,SAAS,CAC9B3B,IAAK,EAAKY,WACVX,KAAM,EAAKa,YACXZ,KAAM,EAAKa,YACXZ,KAAM,EAAKe,UACXd,MAAO,EAAKe,WACZd,gBAAiB,EAAKe,gBACtBd,aAAc,EAAKsB,iBACnBpB,OAAQ,EAAKc,YACbb,MAAOC,OAAOC,eACZ,O,6CAIJD,OAAOmB,oBAAoB,WAAYL,KAAKC,aAAa,K,kCAG/CK,GACV,OAAOA,EAAMC,IAAIC,U,kCAKjB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,GAAKV,KAAKW,MAAMpC,OAAOqC,OAAQF,IAC7CD,EAASA,EAAOI,OAAOH,GAGzB,OAAOD,I,gCAIP,IAAIK,EAAU,GAId,OAHAA,EAAUA,EAAQD,OAAOb,KAAKW,MAAMpC,SAC5BwC,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,KAEnCH,EAAQI,U,iCAIf,IAAIJ,EAAU,GAId,OAHAA,EAAUA,EAAQD,OAAOb,KAAKW,MAAMpC,SAC5BwC,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,KAEnCH,EAAQK,Q,iCAIf,GAAInB,KAAKW,MAAMpC,OAAOqC,QAAU,EAAG,CAGjC,IAFA,IAAIF,EAAIV,KAAKW,MAAMpC,OAAOqC,OAAS,EAC/BQ,EAAS,GACJC,EAAIX,EAAIA,EAAIW,EAAK,EAAGA,IAC3BD,EAASA,EAAOP,OAAOb,KAAKW,MAAMpC,OAAO8C,IAE3CrB,KAAKG,SAAS,CAAE5B,OAAQ6C,IACxBpB,KAAK1B,MAAMC,OAAOwC,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,KACpDjB,KAAK1B,MAAMC,OAAO2C,QAClBlB,KAAK1B,MAAMC,OAAO4C,MAElBnB,KAAKG,SAAS,CACZ3B,KAAOwB,KAAKR,YAAYQ,KAAK1B,MAAMC,QAAQ+C,QAAO,SAACN,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAM,GAAGM,QAAQ,UAItFvB,KAAKG,SAAS,CAAE3B,IAAK,KAGvB,OAAOwB,KAAK1B,MAAME,M,kCAIlB,GAAIwB,KAAKW,MAAMpC,OAAOqC,QAAU,GAAI,CAGlC,IAFA,IAAIF,EAAIV,KAAKW,MAAMpC,OAAOqC,OAAS,EAC/BQ,EAAS,GACJC,EAAIX,EAAIA,EAAIW,EAAK,GAAIA,IAC5BD,EAASA,EAAOP,OAAOb,KAAKW,MAAMpC,OAAO8C,IAE3CrB,KAAKG,SAAS,CAAE5B,OAAQ6C,IACxBpB,KAAK1B,MAAMC,OAAOwC,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,KACpDjB,KAAK1B,MAAMC,OAAO2C,QAClBlB,KAAK1B,MAAMC,OAAO4C,MAClBnB,KAAKG,SAAS,CACZ1B,MAAQuB,KAAKR,YAAYQ,KAAK1B,MAAMC,QAAQ+C,QAAO,SAACN,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAM,IAAIM,QAAQ,UAIxFvB,KAAKG,SAAS,CAAE1B,KAAM,KAGxB,OAAOuB,KAAK1B,MAAMG,O,kCAIlB,GAAIuB,KAAKW,MAAMpC,OAAOqC,QAAU,GAAI,CAGlC,IAFA,IAAIF,EAAIV,KAAKW,MAAMpC,OAAOqC,OAAS,EAC/BQ,EAAS,GACJC,EAAIX,EAAIA,EAAIW,EAAK,GAAIA,IAC5BD,EAASA,EAAOP,OAAOb,KAAKW,MAAMpC,OAAO8C,IAE3CrB,KAAKG,SAAS,CAAE5B,OAAQ6C,IACxBpB,KAAK1B,MAAMC,OAAOwC,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,KACpDjB,KAAK1B,MAAMC,OAAO2C,QAClBlB,KAAK1B,MAAMC,OAAO4C,MAClBnB,KAAKG,SAAS,CACZzB,MAAQsB,KAAKR,YAAYQ,KAAK1B,MAAMC,QAAQ+C,QAAO,SAACN,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAM,IAAIM,QAAQ,UAKxFvB,KAAKG,SAAS,CAAEzB,KAAM,KAGxB,OAAOsB,KAAK1B,MAAMI,O,sCAIlB,IAAIoC,EAAU,GAed,OAdId,KAAKW,MAAMpC,OAAOqC,QAAU,IAC9BE,EAAUA,EAAUA,EAAQD,OAAOb,KAAKW,MAAMpC,SACtCwC,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,KAE1CH,EAAQI,QACRJ,EAAQK,MAERnB,KAAKG,SAAS,CAAEtB,iBAAmBmB,KAAKR,YAAYsB,GAASQ,QAAO,SAACN,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAAOjB,KAAKW,MAAMpC,OAAOqC,OAAS,IAAIW,QAAQ,MAGnIvB,KAAKG,SAAS,CAAEtB,gBAAiB,KAI5BmB,KAAK1B,MAAMO,kB,uCAIlB,IAAIiC,EAAU,GAWd,OAVId,KAAKW,MAAMpC,OAAOqC,OAAS,IAC7BE,EAAUA,EAAUA,EAAQD,OAAOb,KAAKW,MAAMpC,SACtCwC,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAIC,KAE1CjB,KAAKG,SAAS,CAAErB,cAAgBkB,KAAKR,YAAYsB,GAASQ,QAAO,SAACN,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAMjB,KAAKW,MAAMpC,OAAOqC,QAAQW,QAAQ,MAG1HvB,KAAKG,SAAS,CAAErB,aAAc,KAGzBkB,KAAK1B,MAAMQ,e,oCAIlBkB,KAAKW,MAAMlB,cACXO,KAAKG,SAAS,CACZ3B,IAAK,GACLC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPL,OAAQ,O,wCAKVyB,KAAKW,MAAMpC,OAAO4C,Q,+BAKlB,IAAMK,EAAQ,CACZf,OAAQT,KAAK1B,MAAMU,OACnByC,SAAU,CACR,CACEC,MAAO,cACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,UACjBC,YAAa,UACbC,YAAa,EACbC,KAAMhC,KAAKW,MAAMpC,UAKjBU,EAAQe,KAAK1B,MAAMW,MACnBgD,EAAWhD,GAAS,KAAOA,EAAQ,IAEnCiD,EAAkBjD,EAAQ,KAAOA,EAAQ,KAE/C,OAHiBA,GAAS,IAKtB,eAAC,IAAMkD,SAAP,WACE,sBAAKC,GAAG,gBAAR,UACE,oBAAGA,GAAG,WAAN,mBAAwBpC,KAAK1B,MAAME,IAAnC,OACA,oBAAG4D,GAAG,WAAN,oBAAyBpC,KAAK1B,MAAMG,QACpC,oBAAG2D,GAAG,WAAN,oBAAyBpC,KAAK1B,MAAMI,KAApC,UAEF,eAAC2D,EAAA,EAAD,CAAKD,GAAG,YAAR,UACE,eAACE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIJ,GAAG,YAAvB,UACE,6CACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAI,EAAIJ,GAAG,iBAAhB,SACGpC,KAAKW,MAAMpC,SAEd,eAAC+D,EAAA,EAAD,CAAKE,GAAI,EAAGJ,GAAG,aAAf,UACE,gDAAmBpC,KAAK1B,MAAMK,KAA9B,OACA,iDAAoBqB,KAAK1B,MAAMM,MAA/B,OACA,oDAAuBoB,KAAK1B,MAAMO,mBAClC,gDAAmBmB,KAAK1B,MAAMQ,aAA9B,OACA,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,eAAeN,GAAG,eAAeO,QAAS3C,KAAKH,gBAA/D,iBACA,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,eAAeN,GAAG,eAAeO,QAAS3C,KAAKP,YAA/D,kCAIN,eAAC6C,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIJ,GAAG,gBAAvB,UACE,mDACA,cAAC,OAAD,CAAMJ,KAAMR,EACVvC,MAAO,EACP2D,OAAQ,EACRC,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,kBAWxBjB,EAEL,eAAC,IAAME,SAAP,WACE,sBAAKC,GAAG,gBAAR,UACE,oBAAGA,GAAG,WAAN,mBAAwBpC,KAAK1B,MAAME,IAAnC,OACA,oBAAG4D,GAAG,WAAN,oBAAyBpC,KAAK1B,MAAMG,QACpC,oBAAG2D,GAAG,WAAN,oBAAyBpC,KAAK1B,MAAMI,KAApC,UAEF,eAAC2D,EAAA,EAAD,CAAKD,GAAG,YAAR,UACE,eAACE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIJ,GAAG,YAAvB,UACE,6CACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGJ,GAAG,iBAAtB,SACGpC,KAAKW,MAAMpC,SAEd,eAAC+D,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGJ,GAAG,aAAtB,UACE,gDAAmBpC,KAAK1B,MAAMK,KAA9B,OACA,iDAAoBqB,KAAK1B,MAAMM,MAA/B,OACA,oDAAuBoB,KAAK1B,MAAMO,mBAClC,gDAAmBmB,KAAK1B,MAAMQ,aAA9B,OACA,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,eAAeN,GAAG,eAAeO,QAAS3C,KAAKH,gBAA/D,iBACA,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,eAAeN,GAAG,eAAeO,QAAS3C,KAAKP,YAA/D,kCAIN,eAAC6C,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIJ,GAAG,gBAAvB,UACE,mDACA,cAAC,OAAD,CAAMJ,KAAMR,EACVvC,MAAO,EACP2D,OAAQ,EACRC,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,kBAWzBhB,EAEJ,eAAC,IAAMC,SAAP,WACE,sBAAKC,GAAG,gBAAR,UACE,oBAAGA,GAAG,WAAN,mBAAwBpC,KAAK1B,MAAME,IAAnC,OACA,oBAAG4D,GAAG,WAAN,oBAAyBpC,KAAK1B,MAAMG,QACpC,oBAAG2D,GAAG,WAAN,oBAAyBpC,KAAK1B,MAAMI,KAApC,UAEF,eAAC2D,EAAA,EAAD,CAAKD,GAAG,YAAR,UACE,eAACE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIJ,GAAG,YAAvB,UACE,6CACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGJ,GAAG,iBAAtB,SACGpC,KAAKW,MAAMpC,SAEd,eAAC+D,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGJ,GAAG,aAAtB,UACE,gDAAmBpC,KAAK1B,MAAMK,KAA9B,OACA,iDAAoBqB,KAAK1B,MAAMM,MAA/B,OACA,oDAAuBoB,KAAK1B,MAAMO,mBAClC,gDAAmBmB,KAAK1B,MAAMQ,aAA9B,OACA,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,eAAeN,GAAG,eAAeO,QAAS3C,KAAKH,gBAA/D,iBACA,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,eAAeN,GAAG,eAAeO,QAAS3C,KAAKP,YAA/D,kCAIN,eAAC6C,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIJ,GAAG,gBAAvB,UACE,mDACA,cAAC,OAAD,CAAMJ,KAAMR,EACVvC,MAAO,EACP2D,OAAQ,EACRC,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,kBAa7B,eAAC,IAAMf,SAAP,WACE,sBAAKC,GAAG,gBAAR,UACE,oBAAGA,GAAG,WAAN,mBAAwBpC,KAAK1B,MAAME,IAAnC,OACA,oBAAG4D,GAAG,WAAN,oBAAyBpC,KAAK1B,MAAMG,QACpC,oBAAG2D,GAAG,WAAN,oBAAyBpC,KAAK1B,MAAMI,KAApC,UAEF,eAAC2D,EAAA,EAAD,CAAKD,GAAG,YAAR,UACE,eAACE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIJ,GAAG,YAAvB,UACE,6CACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGH,GAAG,iBAAf,SACGpC,KAAKW,MAAMpC,SAEd,eAAC+D,EAAA,EAAD,CAAKC,GAAI,EAAGH,GAAG,aAAf,UACE,gDAAmBpC,KAAK1B,MAAMK,KAA9B,OACA,iDAAoBqB,KAAK1B,MAAMM,MAA/B,OACA,oDAAuBoB,KAAK1B,MAAMO,mBAClC,gDAAmBmB,KAAK1B,MAAMQ,aAA9B,OACA,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,eAAeN,GAAG,eAAeO,QAAS3C,KAAKH,gBAA/D,iBACA,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,eAAeN,GAAG,eAAeO,QAAS3C,KAAKP,YAA/D,kCAIN,eAAC6C,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAIJ,GAAG,gBAAvB,UACE,mDACA,cAAC,OAAD,CAAMJ,KAAMR,EACVvC,MAAO,EACP2D,OAAQ,EACRC,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,sB,GAtYjBC,IAAMC,YCLX,MAA0B,yCCqN1BC,G,yDAhNX,aAAe,IAAD,8BACV,gBACK/E,MAAQ,CACTgF,SAAU,GACVC,KAAM,GACNC,eAAe,GAGnB,EAAKC,QAAU,EAAKA,QAAQpE,KAAb,gBACf,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAChB,EAAKqE,iBAAmB,EAAKA,iBAAiBrE,KAAtB,gBACxB,EAAKsE,aAAe,EAAKA,aAAatE,KAAlB,gBACpB,EAAKuE,gBAAkB,EAAKA,gBAAgBvE,KAArB,gBACvB,EAAKwE,eAAiB,EAAKA,eAAexE,KAApB,gBAbZ,E,gEAkBVW,KAAKsD,WACLQ,SAAS/D,iBAAiB,cAAeC,KAAK6D,gBAAgB,K,6CAK9DE,aAAa/D,KAAK4D,iBAClBE,SAASzD,oBAAoB,cAAeL,KAAK6D,gBAAgB,K,wCAItC,IAAvB7D,KAAKW,MAAMqD,UACXhE,KAAK4D,kBACLK,QAAQC,IAAI,c,gCAYhB,IAHA,IACqCC,EAAgBC,EADjDC,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACtCC,EAAeD,EAAUzD,OAEtB,IAAM0D,GACTF,EAAcG,KAAKC,MAAMD,KAAKE,SAAWH,GAGzCH,EAAiBE,EAFjBC,GAAgB,GAGhBD,EAAUC,GAAgBD,EAAUD,GACpCC,EAAUD,GAAeD,EAG7B,OAAOE,I,uCAIM/D,GAAoC,IAA7BoE,EAA4B,uDAAtB,EAAGC,EAAmB,wDAChD,GAAID,EAAMpE,EAAMM,OAKZ,OAJI+D,IACArE,EAAMsE,OAAOF,EAAK,GAClBA,KAEG1E,KAAK0D,iBAAiBpD,EAAOoE,EAAM,EAAGpE,EAAMoE,KAASpE,EAAMoE,EAAM,M,mCAOnEG,GACT,OAAON,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMK,M,iCAM7C,IASInE,EATAoE,EAAU9E,KAAKyD,UACfsB,EAAU/E,KAAKyD,UACfuB,EAAUhF,KAAKyD,UACfwB,EAAUjF,KAAKyD,UAEfyB,EAAYJ,EAAQjE,OAAOkE,EAASC,EAASC,GAOjD,IALAjF,KAAK0D,iBAAiBwB,GAKjBxE,EAAI,EAAGA,EAAIwE,EAAUtE,OAAQF,IAC9B,OAAQwE,EAAUxE,IACd,IAAK,IACD,OAAQV,KAAK2D,aAAa,IACtB,QACI,MACJ,KAAK,EACDuB,EAAUxE,GAAK,IACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KAGvB,MACJ,IAAK,IACD,OAAQV,KAAK2D,aAAa,IACtB,QACI,MACJ,KAAK,EACDuB,EAAUxE,GAAK,IACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KAGvB,MAEJ,IAAK,IACD,OAAQV,KAAK2D,aAAa,IACtB,QACI,MACJ,KAAK,EACDuB,EAAUxE,GAAK,IACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KAGvB,MAEJ,IAAK,IACD,OAAQV,KAAK2D,aAAa,IACtB,QACI,MACJ,KAAK,EACDuB,EAAUxE,GAAK,IACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KAGvB,MAEJ,IAAK,IACD,OAAQV,KAAK2D,aAAa,IACtB,QACI,MACJ,KAAK,EACDuB,EAAUxE,GAAK,IACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KAGvB,MAEJ,IAAK,IACD,OAAQV,KAAK2D,aAAa,IACtB,QACI,MACJ,KAAK,EACDuB,EAAUxE,GAAK,IACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,KACf,MACJ,KAAK,EACDwE,EAAUxE,GAAK,MASnCwE,EAAYA,EAAUC,KAAK,KAC3BnF,KAAKG,SAAS,CAAEmD,SAAU4B,M,wCAI1BE,WAAWpF,KAAKsD,SAAU,O,+BAI1B,OACI,sBAAKlB,GAAG,WAAR,UACKpC,KAAK1B,MAAMgF,SACXtD,KAAK6D,iBACN,qBAAKwB,IAAKrB,EAASrB,QAAS3C,KAAK4D,gBAAiBxB,GAAG,eAAekD,IAAI,0B,GA3MhEnC,IAAMC,YCuGfmC,G,yDAnGX,aAAe,IAAD,8BACV,gBACKjH,MAAQ,CACTiF,KAAM,EACNiC,MAAO,EACPC,MAAM,EACNC,OAAQ,EACRnH,OAAQ,GACRyF,SAAS,GAGb,EAAK2B,WAAa,EAAKA,WAAWtG,KAAhB,gBAClB,EAAKuG,UAAY,EAAKA,UAAUvG,KAAf,gBACjB,EAAKwG,WAAa,EAAKA,WAAWxG,KAAhB,gBAClB,EAAKY,YAAc,EAAKA,YAAYZ,KAAjB,gBACnB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAK2E,QAAU,EAAKA,QAAQ3E,KAAb,gBAhBL,E,gEAoBVyE,SAAS/D,iBAAiB,SAAUC,KAAK8F,wBACzChC,SAAS/D,iBAAiB,WAAYC,KAAKC,aAAa,K,6CAIxD6D,SAASzD,oBAAoB,SAAUL,KAAK8F,wBAC5ChC,SAASzD,oBAAoB,WAAYL,KAAKC,aAAa,K,kCAGnD8F,GACU,KAAdA,EAAEC,UACsB,IAApBhG,KAAK1B,MAAMiF,KACXvD,KAAK2F,cAGL3F,KAAK4F,YACL5F,KAAKG,SAAS,CAAE6D,SAAS,IACzBoB,WAAWpF,KAAKgE,QAAS,S,mCAKvB,IAAD,OACThE,KAAKG,SAAS,CACVoD,KAAMvD,KAAK1B,MAAMiF,KACjBiC,MAAOS,KAAKC,MAAQlG,KAAK1B,MAAMiF,KAC/BkC,MAAM,IAIVzF,KAAKmG,MAAQjG,aAAY,kBAAM,EAAKC,SAAS,CACzCoD,KAAM6C,IAAGH,KAAKC,MAAQ,EAAK5H,MAAMkH,WACjC,K,gCAKJxF,KAAKG,SAAS,CAAE6D,SAAS,IACzBhE,KAAKqG,aACLrG,KAAK6F,e,kCAIL7F,KAAKG,SAAS,CACVsF,MAAM,EACNzB,SAAS,IAEbsC,cAActG,KAAKmG,S,mCAInBnG,KAAKG,SAAS,CACVoD,KAAM,EACNS,SAAS,M,mCAKbhE,KAAKG,SAAS,CAAE5B,OAAQyB,KAAK1B,MAAMC,OAAOsC,OAAOb,KAAK1B,MAAMiF,KAAKgD,QAAQ,IAAK,IAAIA,QAAQ,IAAK,W,oCAI/FvG,KAAKG,SAAS,CAAE5B,OAAQ,O,+BAIxB,OACI,sBAAKiI,QAASxG,KAAKC,YAAawG,SAAS,IAAIrE,GAAG,kBAAhD,UACI,cAACC,EAAA,EAAD,UACI,cAAC,EAAD,CAAW2B,QAAShE,KAAK1B,MAAM0F,YAEnC,oBAAG5B,GAAG,aAAN,cAAqBpC,KAAK1B,MAAMiF,KAAhC,OACA,cAAC,EAAD,CAAOhF,OAAQyB,KAAK1B,MAAMC,OAAQkB,YAAaO,KAAKP,qB,GA7FhD0D,IAAMC,Y,OCUXsD,MAZf,WACE,OACE,8BACE,qBAAKtE,GAAG,WAAR,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,WCEKsE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASyD,eAAe,SAM1BZ,K","file":"static/js/main.c933cb95.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport \"./statistics.css\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      record: [],\r\n      ao5: 0,\r\n      ao12: 0,\r\n      ao50: 0,\r\n      best: 0,\r\n      worst: 0,\r\n      session_average: 0,\r\n      session_mean: 0,\r\n      full_record: [],\r\n      x_axis: [],\r\n      width: window.innerWidth,\r\n    };\r\n\r\n    this.avg_of_5 = this.avg_of_5.bind(this)\r\n    this.avg_of_12 = this.avg_of_12.bind(this)\r\n    this.avg_of_50 = this.avg_of_50.bind(this)\r\n    this.stringToInt = this.stringToInt.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.getBest = this.getBest.bind(this)\r\n    this.getWorst = this.getWorst.bind(this)\r\n    this.getSessionAvg = this.getSessionAvg.bind(this)\r\n    this.deleteLastSolve = this.deleteLastSolve.bind(this)\r\n    this.generateX = this.generateX.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"spacebar\", this.handleSpace, true);\r\n    setInterval(() => this.setState({\r\n      ao5: this.avg_of_5(),\r\n      ao12: this.avg_of_12(),\r\n      ao50: this.avg_of_50(),\r\n      best: this.getBest(),\r\n      worst: this.getWorst(),\r\n      session_average: this.getSessionAvg(),\r\n      session_mean: this.getSessionMean(),\r\n      x_axis: this.generateX(),\r\n      width: window.innerWidth,\r\n    }), 500)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n  }\r\n\r\n  stringToInt(array) {\r\n    return array.map(Number);\r\n  }\r\n\r\n  generateX() {\r\n    var labels = []\r\n    for (var i = 1; i <= this.props.record.length; i++) {\r\n      labels = labels.concat(i);\r\n    }\r\n\r\n    return labels;\r\n  }\r\n\r\n  getBest() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.shift();\r\n  }\r\n\r\n  getWorst() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.pop();\r\n  }\r\n\r\n  avg_of_5() {\r\n    if (this.props.record.length >= 5) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 5; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n      this.setState({ record: solves })\r\n      this.state.record.sort(function (a, b) { return a - b });\r\n      this.state.record.shift();\r\n      this.state.record.pop();\r\n\r\n      this.setState({\r\n        ao5: ((this.stringToInt(this.state.record).reduce((a, b) => a + b, 0)) / 3).toFixed(2),\r\n      });\r\n    }\r\n    else {\r\n      this.setState({ ao5: \"\" });\r\n    }\r\n\r\n    return this.state.ao5;\r\n  }\r\n\r\n  avg_of_12() {\r\n    if (this.props.record.length >= 12) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 12; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n      this.setState({ record: solves })\r\n      this.state.record.sort(function (a, b) { return a - b });\r\n      this.state.record.shift();\r\n      this.state.record.pop();\r\n      this.setState({\r\n        ao12: ((this.stringToInt(this.state.record).reduce((a, b) => a + b, 0)) / 10).toFixed(2),\r\n      });\r\n    }\r\n    else {\r\n      this.setState({ ao12: \"\" });\r\n    }\r\n\r\n    return this.state.ao12;\r\n  }\r\n\r\n  avg_of_50() {\r\n    if (this.props.record.length >= 50) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 50; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n      this.setState({ record: solves })\r\n      this.state.record.sort(function (a, b) { return a - b });\r\n      this.state.record.shift();\r\n      this.state.record.pop();\r\n      this.setState({\r\n        ao50: ((this.stringToInt(this.state.record).reduce((a, b) => a + b, 0)) / 48).toFixed(2),\r\n      });\r\n    }\r\n\r\n    else {\r\n      this.setState({ ao50: \"\" });\r\n    }\r\n\r\n    return this.state.ao50;\r\n  }\r\n\r\n  getSessionAvg() {\r\n    var session = []\r\n    if (this.props.record.length >= 3) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n\r\n      session.shift();\r\n      session.pop();\r\n\r\n      this.setState({ session_average: ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / (this.props.record.length - 2)).toFixed(2) });\r\n    }\r\n    else {\r\n      this.setState({ session_average: \"\" })\r\n    }\r\n\r\n\r\n    return this.state.session_average;\r\n  }\r\n\r\n  getSessionMean() {\r\n    var session = []\r\n    if (this.props.record.length > 0) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n\r\n      this.setState({ session_mean: ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / this.props.record.length).toFixed(2) })\r\n    }\r\n    else {\r\n      this.setState({ session_mean: \"\" });\r\n    }\r\n\r\n    return this.state.session_mean;\r\n  }\r\n\r\n  clearRecord() {\r\n    this.props.clearRecord();\r\n    this.setState({\r\n      ao5: \"\",\r\n      ao12: \"\",\r\n      ao50: \"\",\r\n      best: \"\",\r\n      worst: \"\",\r\n      record: \"\",\r\n    })\r\n  }\r\n\r\n  deleteLastSolve() {\r\n    this.props.record.pop();\r\n  }\r\n\r\n  render() {\r\n\r\n    const graph = {\r\n      labels: this.state.x_axis,\r\n      datasets: [\r\n        {\r\n          label: 'Solve Times',\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: '#FFFFFF',\r\n          borderColor: '#939393',\r\n          borderWidth: 1,\r\n          data: this.props.record\r\n        }\r\n      ]\r\n    }\r\n\r\n    const width = this.state.width;\r\n    const isTablet = width <= 768 && width > 480;\r\n    const isMobile = width <= 480;\r\n    const isSmall_Desktop = width > 768 && width < 1400;\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> ao5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> ao12: {this.state.ao12}</p>\r\n            <p id=\"avg-text\"> ao50: {this.state.ao50} </p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={6} xs={12} id=\"s_section\">\r\n              <p> Statistics </p>\r\n              <Row>\r\n                <Col xs={6}  id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n                <Col xs={6} id=\"main_stats\">\r\n                  <p> Session Best: {this.state.best} </p>\r\n                  <p> Session Worst: {this.state.worst} </p>\r\n                  <p> Session Average:  {this.state.session_average}</p>\r\n                  <p> Session Mean: {this.state.session_mean} </p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> X </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}> Reset All </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={6} xs={12} id=\"chart_section\">\r\n              <p> Performance Data </p>\r\n              <Line data={graph}\r\n                width={2}\r\n                height={1}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  scales: {\r\n                    yAxes: [{\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    else if (isTablet) {\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> ao5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> ao12: {this.state.ao12}</p>\r\n            <p id=\"avg-text\"> ao50: {this.state.ao50} </p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={6} xs={12} id=\"s_section\">\r\n              <p> Statistics </p>\r\n              <Row>\r\n                <Col md={8} xs={6} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n                <Col md={4} xs={6} id=\"main_stats\">\r\n                  <p> Session Best: {this.state.best} </p>\r\n                  <p> Session Worst: {this.state.worst} </p>\r\n                  <p> Session Average:  {this.state.session_average}</p>\r\n                  <p> Session Mean: {this.state.session_mean} </p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> X </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}> Reset All </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={6} xs={12} id=\"chart_section\">\r\n              <p> Performance Data </p>\r\n              <Line data={graph}\r\n                width={4}\r\n                height={2}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  scales: {\r\n                    yAxes: [{\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    else if(isSmall_Desktop){\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> ao5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> ao12: {this.state.ao12}</p>\r\n            <p id=\"avg-text\"> ao50: {this.state.ao50} </p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={6} xs={12} id=\"s_section\">\r\n              <p> Statistics </p>\r\n              <Row>\r\n                <Col md={8} xs={6} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n                <Col md={4} xs={6} id=\"main_stats\">\r\n                  <p> Session Best: {this.state.best} </p>\r\n                  <p> Session Worst: {this.state.worst} </p>\r\n                  <p> Session Average:  {this.state.session_average}</p>\r\n                  <p> Session Mean: {this.state.session_mean} </p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> X </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}> Reset All </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={6} xs={12} id=\"chart_section\">\r\n              <p> Performance Data </p>\r\n              <Line data={graph}\r\n                width={3}\r\n                height={1}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  scales: {\r\n                    yAxes: [{\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> ao5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> ao12: {this.state.ao12}</p>\r\n            <p id=\"avg-text\"> ao50: {this.state.ao50} </p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={6} xs={12} id=\"s_section\">\r\n              <p> Statistics </p>\r\n              <Row>\r\n                <Col md={8} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n                <Col md={4} id=\"main_stats\">\r\n                  <p> Session Best: {this.state.best} </p>\r\n                  <p> Session Worst: {this.state.worst} </p>\r\n                  <p> Session Average:  {this.state.session_average}</p>\r\n                  <p> Session Mean: {this.state.session_mean} </p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> X </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}> Reset All </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={6} xs={12} id=\"chart_section\">\r\n              <p> Performance Data </p>\r\n              <Line data={graph}\r\n                width={5}\r\n                height={1}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  scales: {\r\n                    yAxes: [{\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Stats;","export default __webpack_public_path__ + \"static/media/Refresh_icon.a86495a5.png\";","import React from 'react';\r\nimport refresh from '../Assets/Refresh_icon.png';\r\nimport \"./scrambler.css\";\r\n\r\nclass Scrambler extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            scramble: '',\r\n            time: '',\r\n            solve_started: false,\r\n        };\r\n\r\n        this.shuffle = this.shuffle.bind(this)\r\n        this.scramble = this.scramble.bind(this)\r\n        this.removeDuplicates = this.removeDuplicates.bind(this)\r\n        this.getRandomInt = this.getRandomInt.bind(this)\r\n        this.refreshScramble = this.refreshScramble.bind(this)\r\n        this.refreshOnSolve = this.refreshOnSolve.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Generates an initial scramble\r\n        this.scramble();\r\n        document.addEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.refreshScramble);\r\n        document.removeEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n    }\r\n\r\n    refreshOnSolve() {\r\n        if (this.props.refresh === true) {\r\n            this.refreshScramble();\r\n            console.log(\"Refresh\");\r\n        }\r\n        else { \r\n            \r\n        }\r\n    }\r\n\r\n    // Creates an array of sides and shuffles the element randomly\r\n    shuffle() {\r\n        var scr_array = [\"R\", \"U\", \"D\", \"L\", \"F\", \"B\"];\r\n        var currentIndex = scr_array.length, temporaryValue, randomIndex;\r\n\r\n        while (0 !== currentIndex) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            temporaryValue = scr_array[currentIndex];\r\n            scr_array[currentIndex] = scr_array[randomIndex];\r\n            scr_array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return scr_array;\r\n    }\r\n\r\n    // Removes consecutive duplicates from an array to prevent redundant moves\r\n    removeDuplicates(array, len = 0, canDelete = false) {\r\n        if (len < array.length) {\r\n            if (canDelete) {\r\n                array.splice(len, 1);\r\n                len--;\r\n            }\r\n            return this.removeDuplicates(array, len + 1, array[len] === array[len + 1])\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    // Generates a random number from a range indicated by max.\r\n    getRandomInt(max) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n    // Generate a scramble\r\n    scramble() {\r\n\r\n        var array_1 = this.shuffle();\r\n        var array_2 = this.shuffle();\r\n        var array_3 = this.shuffle();\r\n        var array_4 = this.shuffle();\r\n\r\n        var final_scr = array_1.concat(array_2, array_3, array_4);\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n        var i;\r\n\r\n        // Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n            switch (final_scr[i]) {\r\n                case \"R\":\r\n                    switch (this.getRandomInt(3)) {\r\n                        default:\r\n                            break;\r\n                        case 0:\r\n                            final_scr[i] = \"R\"\r\n                            break;\r\n                        case 1:\r\n                            final_scr[i] = \"R'\"\r\n                            break;\r\n                        case 2:\r\n                            final_scr[i] = \"R2\"\r\n                            break;\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    switch (this.getRandomInt(3)) {\r\n                        default:\r\n                            break;\r\n                        case 0:\r\n                            final_scr[i] = \"L\"\r\n                            break;\r\n                        case 1:\r\n                            final_scr[i] = \"L'\"\r\n                            break;\r\n                        case 2:\r\n                            final_scr[i] = \"L2\"\r\n                            break;\r\n                    }\r\n                    break;\r\n\r\n                case \"U\":\r\n                    switch (this.getRandomInt(3)) {\r\n                        default:\r\n                            break;\r\n                        case 0:\r\n                            final_scr[i] = \"U\"\r\n                            break;\r\n                        case 1:\r\n                            final_scr[i] = \"U'\"\r\n                            break;\r\n                        case 2:\r\n                            final_scr[i] = \"U2\"\r\n                            break;\r\n                    }\r\n                    break;\r\n\r\n                case \"D\":\r\n                    switch (this.getRandomInt(3)) {\r\n                        default:\r\n                            break;\r\n                        case 0:\r\n                            final_scr[i] = \"D\"\r\n                            break;\r\n                        case 1:\r\n                            final_scr[i] = \"D'\"\r\n                            break;\r\n                        case 2:\r\n                            final_scr[i] = \"D2\"\r\n                            break;\r\n                    }\r\n                    break;\r\n\r\n                case \"F\":\r\n                    switch (this.getRandomInt(3)) {\r\n                        default:\r\n                            break;\r\n                        case 0:\r\n                            final_scr[i] = \"F\"\r\n                            break;\r\n                        case 1:\r\n                            final_scr[i] = \"F'\"\r\n                            break;\r\n                        case 2:\r\n                            final_scr[i] = \"F2\"\r\n                            break;\r\n                    }\r\n                    break;\r\n\r\n                case \"B\":\r\n                    switch (this.getRandomInt(3)) {\r\n                        default:\r\n                            break;\r\n                        case 0:\r\n                            final_scr[i] = \"B\"\r\n                            break;\r\n                        case 1:\r\n                            final_scr[i] = \"B'\"\r\n                            break;\r\n                        case 2:\r\n                            final_scr[i] = \"B2\"\r\n                            break;\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n    }\r\n\r\n    refreshScramble() {\r\n        setTimeout(this.scramble, 500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"scramble\">\r\n                {this.state.scramble}\r\n                {this.refreshOnSolve()}\r\n                <img src={refresh} onClick={this.refreshScramble} id=\"refresh_icon\" alt=\"refresh_button\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Scrambler;","import React from 'react';\r\nimport ms from 'pretty-ms';\r\nimport { Row } from 'react-bootstrap';\r\nimport Stats from './statistics.js';\r\nimport Scrambler from './scrambler.js';\r\nimport \"./timer.css\";\r\n\r\nclass Timer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            time: 0,\r\n            start: 0,\r\n            isOn: false,\r\n            result: 0,\r\n            record: [],\r\n            refresh: false,\r\n        };\r\n\r\n        this.startTimer = this.startTimer.bind(this)\r\n        this.stopTimer = this.stopTimer.bind(this)\r\n        this.resetTimer = this.resetTimer.bind(this)\r\n        this.handleSpace = this.handleSpace.bind(this)\r\n        this.clearRecord = this.clearRecord.bind(this)\r\n        this.refresh = this.refresh.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"resize\", this.handleWindowSizeChange);\r\n        document.addEventListener(\"spacebar\", this.handleSpace, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"resize\", this.handleWindowSizeChange);\r\n        document.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n    }\r\n\r\n    handleSpace(e) {\r\n        if (e.keyCode === 32) {\r\n            if (this.state.time === 0) {\r\n                this.startTimer();\r\n            }\r\n            else {\r\n                this.stopTimer();\r\n                this.setState({ refresh: true });\r\n                setTimeout(this.refresh, 500);\r\n            }\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        this.setState({\r\n            time: this.state.time,\r\n            start: Date.now() - this.state.time,\r\n            isOn: true\r\n        })\r\n\r\n\r\n        this.timer = setInterval(() => this.setState({\r\n            time: ms(Date.now() - this.state.start)\r\n        }), 1);\r\n\r\n    }\r\n\r\n    refresh() {\r\n        this.setState({ refresh: false });\r\n        this.exportTime();  \r\n        this.resetTimer();\r\n    }\r\n\r\n    stopTimer() {\r\n        this.setState({\r\n            isOn: false,\r\n            refresh: true,\r\n        })\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    resetTimer() {\r\n        this.setState({\r\n            time: 0,\r\n            refresh: false\r\n        })\r\n    }\r\n\r\n    exportTime() {\r\n        this.setState({ record: this.state.record.concat(this.state.time.replace('m', '').replace('s', '  ')) });\r\n    }\r\n\r\n    clearRecord() {\r\n        this.setState({ record: [] });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onKeyUp={this.handleSpace} tabIndex=\"0\" id=\"timer-container\">\r\n                <Row>\r\n                    <Scrambler refresh={this.state.refresh} />\r\n                </Row>\r\n                <p id=\"timer-text\"> {this.state.time} </p>\r\n                <Stats record={this.state.record} clearRecord={this.clearRecord} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport Timer from './Components/timer.js';\r\nimport { Row } from \"react-bootstrap\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div id=\"simplict\">\r\n        <Row>\r\n          <Timer />\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}