{"version":3,"sources":["Components/statistics.js","Assets/Refresh_icon.png","Components/scrambler.js","Components/timer.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","state","record","ao5","ao12","best","worst","session_average","session_mean","full_record","x_axis","width","window","innerWidth","avg_of_5","bind","avg_of_12","stringToInt","clearRecord","getBest","getWorst","getSessionAvg","deleteLastSolve","generateX","handleWindowSizeChange","addEventListener","this","handleSpace","setInterval","setState","getSessionMean","removeEventListener","array","map","Number","labels","i","props","length","concat","session","sort","a","b","shift","pop","solves","x","reduce","toFixed","ao50","graph","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","isTablet","isSmall_Desktop","Fragment","id","Row","Col","md","xs","Button","variant","onClick","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","React","Component","Scrambler","scramble","time","solve_started","puzzle_type","shuffle","removeDuplicates","getRandomInt","refreshScramble","refreshOnSolve","remove4x4Error","get3Scramble","get4Scramble","get5Scramble","getMScramble","document","clearTimeout","refresh","temporaryValue","randomIndex","scr_array","currentIndex","Math","floor","random","len","canDelete","splice","one_apart","isDeletable","consecutive","max","array_1","array_2","array_3","array_4","final_scr","join","array_5","array_6","array_7","array_8","array_9","array_10","m_array_1","m_array_2","m_array_3","m_array_4","m_array_5","setTimeout","Container","lg","sm","Dropdown","Toggle","Menu","Item","src","alt","Timer","start","isOn","result","startTimer","stopTimer","resetTimer","msToTime","handleHold","e","keyCode","s","pad","n","z","slice","alert","Date","now","timer","exportTime","clearInterval","onKeyUp","tabIndex","onTap","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5dc7666.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport \"./statistics.css\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      record: [],\r\n      ao5: 0,\r\n      ao12: 0,\r\n      best: 0,\r\n      worst: 0,\r\n      session_average: 0,\r\n      session_mean: 0,\r\n      full_record: [],\r\n      x_axis: [],\r\n      width: window.innerWidth,\r\n    };\r\n\r\n    this.avg_of_5 = this.avg_of_5.bind(this)\r\n    this.avg_of_12 = this.avg_of_12.bind(this)\r\n    this.stringToInt = this.stringToInt.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.getBest = this.getBest.bind(this)\r\n    this.getWorst = this.getWorst.bind(this)\r\n    this.getSessionAvg = this.getSessionAvg.bind(this)\r\n    this.deleteLastSolve = this.deleteLastSolve.bind(this)\r\n    this.generateX = this.generateX.bind(this)\r\n    this.handleWindowSizeChange = this.handleWindowSizeChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"spacebar\", this.handleSpace, true);\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\r\n    setInterval(() => this.setState({\r\n      ao5: this.avg_of_5(),\r\n      ao12: this.avg_of_12(),\r\n      best: this.getBest(),\r\n      worst: this.getWorst(),\r\n      session_average: this.getSessionAvg(),\r\n      session_mean: this.getSessionMean(),\r\n      x_axis: this.generateX(),\r\n      width: window.innerWidth,\r\n    }), 500)\r\n    \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n    window.removeEventListener(\"resize\", this.handleWindowSizeChange);\r\n  }\r\n\r\n  handleWindowSizeChange(){\r\n    this.setState({ width: window.innerWidth});\r\n  }\r\n\r\n  stringToInt(array) {\r\n    return array.map(Number);\r\n  }\r\n\r\n  generateX() {\r\n    var labels = []\r\n    for (var i = 1; i <= this.props.record.length; i++) {\r\n      labels = labels.concat(i);\r\n    }\r\n\r\n    return labels;\r\n  }\r\n\r\n  getBest() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.shift();\r\n  }\r\n\r\n  getWorst() {\r\n    var session = [];\r\n    session = session.concat(this.props.record);\r\n    session.sort(function (a, b) { return a - b });\r\n\r\n    return session.pop();\r\n  }\r\n\r\n  avg_of_5() {\r\n    if (this.props.record.length >= 5) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 5; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n      this.setState({ record: solves })\r\n      this.state.record.sort(function (a, b) { return a - b });\r\n      this.state.record.shift();\r\n      this.state.record.pop();\r\n\r\n      this.setState({\r\n        ao5: ((this.stringToInt(this.state.record).reduce((a, b) => a + b, 0)) / 3).toFixed(2),\r\n      });\r\n    }\r\n    else {\r\n      this.setState({ ao5: \"\" });\r\n    }\r\n\r\n    return this.state.ao5;\r\n  }\r\n\r\n  avg_of_12() {\r\n    if (this.props.record.length >= 12) {\r\n      var i = this.props.record.length - 1;\r\n      var solves = []\r\n      for (var x = i; (i - x) < 12; x--) {\r\n        solves = solves.concat(this.props.record[x])\r\n      }\r\n      this.setState({ record: solves })\r\n      this.state.record.sort(function (a, b) { return a - b });\r\n      this.state.record.shift();\r\n      this.state.record.pop();\r\n      this.setState({\r\n        ao12: ((this.stringToInt(this.state.record).reduce((a, b) => a + b, 0)) / 10).toFixed(2),\r\n      });\r\n    }\r\n    else {\r\n      this.setState({ ao12: \"\" });\r\n    }\r\n\r\n    return this.state.ao12;\r\n  }\r\n\r\n \r\n\r\n  getSessionAvg() {\r\n    var session = []\r\n    if (this.props.record.length >= 3) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n\r\n      session.shift();\r\n      session.pop();\r\n\r\n      this.setState({ session_average: ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / (this.props.record.length - 2)).toFixed(2) });\r\n    }\r\n    else {\r\n      this.setState({ session_average: \"\" })\r\n    }\r\n\r\n\r\n    return this.state.session_average;\r\n  }\r\n\r\n  getSessionMean() {\r\n    var session = []\r\n    if (this.props.record.length > 0) {\r\n      session = session = session.concat(this.props.record);\r\n      session.sort(function (a, b) { return a - b });\r\n\r\n      this.setState({ session_mean: ((this.stringToInt(session).reduce((a, b) => a + b, 0)) / this.props.record.length).toFixed(2) })\r\n    }\r\n    else {\r\n      this.setState({ session_mean: \"\" });\r\n    }\r\n\r\n    return this.state.session_mean;\r\n  }\r\n\r\n  clearRecord() {\r\n    this.props.clearRecord();\r\n    this.setState({\r\n      ao5: \"\",\r\n      ao12: \"\",\r\n      ao50: \"\",\r\n      best: \"\",\r\n      worst: \"\",\r\n      record: \"\",\r\n    })\r\n  }\r\n\r\n  deleteLastSolve() {\r\n    this.props.record.pop();\r\n  }\r\n\r\n  render() {\r\n\r\n    const graph = {\r\n      labels: this.state.x_axis,\r\n      datasets: [\r\n        {\r\n          label: 'Solve Times',\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: '#FFFFFF',\r\n          borderColor: '#939393',\r\n          borderWidth: 1,\r\n          data: this.props.record\r\n        }\r\n      ]\r\n    }\r\n\r\n    const width = this.state.width;\r\n    const isTablet = width <= 768 && width > 480;\r\n    const isMobile = width <= 480;\r\n    const isSmall_Desktop = width > 768 && width < 1400;\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> ao5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> ao12: {this.state.ao12}</p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={6} xs={12} id=\"s_section\">\r\n              <p> Statistics </p>\r\n              <Row>\r\n                <Col xs={6}  id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n                <Col xs={6} id=\"main_stats\">\r\n                  <p> Session Best: {this.state.best} </p>\r\n                  <p> Session Worst: {this.state.worst} </p>\r\n                  <p> Session Average:  {this.state.session_average}</p>\r\n                  <p> Session Mean: {this.state.session_mean} </p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> X </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}> Reset All </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={6} xs={12} id=\"chart_section\">\r\n              <p> Performance Data </p>\r\n              <Line data={graph}\r\n                width={2}\r\n                height={1}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  scales: {\r\n                    yAxes: [{\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    else if (isTablet) {\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> ao5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> ao12: {this.state.ao12}</p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={6} xs={12} id=\"s_section\">\r\n              <p> Statistics </p>\r\n              <Row>\r\n                <Col md={8} xs={6} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n                <Col md={4} xs={6} id=\"main_stats\">\r\n                  <p> Session Best: {this.state.best} </p>\r\n                  <p> Session Worst: {this.state.worst} </p>\r\n                  <p> Session Average:  {this.state.session_average}</p>\r\n                  <p> Session Mean: {this.state.session_mean} </p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> X </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}> Reset All </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={6} xs={12} id=\"chart_section\">\r\n              <p> Performance Data </p>\r\n              <Line data={graph}\r\n                width={4}\r\n                height={2}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  scales: {\r\n                    yAxes: [{\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    else if(isSmall_Desktop){\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> ao5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> ao12: {this.state.ao12}</p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={6} xs={12} id=\"s_section\">\r\n              <p> Statistics </p>\r\n              <Row>\r\n                <Col md={8} xs={6} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n                <Col md={4} xs={6} id=\"main_stats\">\r\n                  <p> Session Best: {this.state.best} </p>\r\n                  <p> Session Worst: {this.state.worst} </p>\r\n                  <p> Session Average:  {this.state.session_average}</p>\r\n                  <p> Session Mean: {this.state.session_mean} </p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> X </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}> Reset All </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={6} xs={12} id=\"chart_section\">\r\n              <p> Performance Data </p>\r\n              <Line data={graph}\r\n                width={3}\r\n                height={1}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  scales: {\r\n                    yAxes: [{\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <React.Fragment>\r\n          <div id=\"avg-container\">\r\n            <p id=\"avg-text\"> ao5: {this.state.ao5} </p>\r\n            <p id=\"avg-text\"> ao12: {this.state.ao12}</p>\r\n          </div>\r\n          <Row id=\"dashboard\">\r\n            <Col md={6} xs={12} id=\"s_section\">\r\n              <p> Statistics </p>\r\n              <Row>\r\n                <Col md={8} id=\"recorded_times\">\r\n                  {this.props.record}\r\n                </Col>\r\n                <Col md={4} id=\"main_stats\">\r\n                  <p> Session Best: {this.state.best} </p>\r\n                  <p> Session Worst: {this.state.worst} </p>\r\n                  <p> Session Average:  {this.state.session_average}</p>\r\n                  <p> Session Mean: {this.state.session_mean} </p>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.deleteLastSolve}> X </Button>\r\n                  <Button variant=\"outline-dark\" id=\"reset-button\" onClick={this.clearRecord}> Reset All </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={6} xs={12} id=\"chart_section\">\r\n              <p> Performance Data </p>\r\n              <Line data={graph}\r\n                width={5}\r\n                height={1}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  scales: {\r\n                    yAxes: [{\r\n                      ticks: {\r\n                        beginAtZero: true\r\n                      }\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Stats;","export default __webpack_public_path__ + \"static/media/Refresh_icon.a86495a5.png\";","import React from 'react';\r\nimport refresh from '../Assets/Refresh_icon.png';\r\nimport \"./scrambler.css\";\r\nimport { Container, Dropdown, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nclass Scrambler extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      scramble: '',\r\n      time: '',\r\n      solve_started: false,\r\n      puzzle_type: '3x3',\r\n    };\r\n\r\n    this.shuffle = this.shuffle.bind(this)\r\n    this.scramble = this.scramble.bind(this)\r\n    this.removeDuplicates = this.removeDuplicates.bind(this)\r\n    this.getRandomInt = this.getRandomInt.bind(this)\r\n    this.refreshScramble = this.refreshScramble.bind(this)\r\n    this.refreshOnSolve = this.refreshOnSolve.bind(this)\r\n    this.remove4x4Error = this.remove4x4Error.bind(this)\r\n    this.get3Scramble = this.get3Scramble.bind(this)\r\n    this.get4Scramble = this.get4Scramble.bind(this)\r\n    this.get5Scramble = this.get5Scramble.bind(this)\r\n    this.getMScramble = this.getMScramble.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Generates an initial scramble\r\n    this.scramble();\r\n    document.addEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.refreshScramble);\r\n    document.removeEventListener(\"refresh_scr\", this.refreshOnSolve, true)\r\n  }\r\n\r\n  refreshOnSolve() {\r\n    if (this.props.refresh === true) {\r\n      this.refreshScramble();\r\n    }\r\n    else {\r\n\r\n    }\r\n  }\r\n\r\n  get3Scramble() {\r\n    this.setState({ puzzle_type: \"3x3\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  get4Scramble() {\r\n    this.setState({ puzzle_type: \"4x4\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  get5Scramble() {\r\n    this.setState({ puzzle_type: \"5x5\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  getMScramble() {\r\n    this.setState({ puzzle_type: \"Mega\" })\r\n    this.refreshScramble();\r\n  }\r\n\r\n  // Creates an array of sides and shuffles the element randomly\r\n  shuffle() {\r\n    var scr_array = [\"R\", \"U\", \"D\", \"L\", \"F\", \"B\"];\r\n    var currentIndex = scr_array.length, temporaryValue, randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      temporaryValue = scr_array[currentIndex];\r\n      scr_array[currentIndex] = scr_array[randomIndex];\r\n      scr_array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return scr_array;\r\n  }\r\n\r\n  // Removes 4x4 opposing layers turn from an array to prevent redundant moves\r\n  removeDuplicates(array, len = 0, canDelete = false) {\r\n    if (len < array.length) {\r\n      if (canDelete) {   // If element is the same as the next one, deletes 1 and go back 1 step. \r\n        array.splice(len, 1);\r\n        len = len - 2;\r\n      }\r\n\r\n      var consecutive = (array[len] === array[len + 1])\r\n      var one_apart;\r\n\r\n      switch (array[len]) {\r\n        case \"F\":\r\n          if (array[len + 1] === \"B\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"B\":\r\n          if (array[len + 1] === \"F\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n\r\n        case \"L\":\r\n          if (array[len + 1] === \"R\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"R\":\r\n          if (array[len + 1] === \"L\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        case \"U\":\r\n          if (array[len + 1] === \"D\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n\r\n        case \"D\":\r\n          if (array[len + 1] === \"U\" && array[len] === array[len + 2]) {\r\n            one_apart = true;\r\n          }\r\n          break;\r\n        default:\r\n          one_apart = false;\r\n          break;\r\n      }\r\n\r\n      var isDeletable;\r\n\r\n      if (consecutive || one_apart) {\r\n        isDeletable = true;\r\n      } else {\r\n        isDeletable = false;\r\n      }\r\n\r\n      return this.removeDuplicates(array, len + 1, isDeletable)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  remove4x4Error(array, len = 0, canDelete = false) {\r\n    if (len < array.length) {\r\n      if (canDelete) {\r\n        array.splice(len, 1);\r\n        len--;\r\n      }\r\n\r\n      var isDeletable;\r\n\r\n      switch (array[len]) {\r\n        case \"F\":\r\n          if (array[len + 1] === \"B\" || array[len - 1] === \"B\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"B\":\r\n          if (array[len + 1] === \"F\" || array[len - 1] === \"F\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"R\":\r\n          if (array[len + 1] === \"L\" || array[len - 1] === \"L\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"L\":\r\n          if (array[len + 1] === \"R\" || array[len - 1] === \"R\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"U\":\r\n          if (array[len + 1] === \"D\" || array[len - 1] === \"D\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n        case \"D\":\r\n          if (array[len + 1] === \"U\" || array[len - 1] === \"U\") {\r\n            isDeletable = true;\r\n          }\r\n          break;\r\n\r\n        default:\r\n          isDeletable = false;\r\n          break;\r\n      }\r\n\r\n      return this.remove4x4Error(array, len + 1, isDeletable)\r\n    }\r\n\r\n  }\r\n\r\n  // Generates a random number from a range indicated by max.\r\n  getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n\r\n  // Generate a scramble\r\n  scramble() {\r\n    switch (this.state.puzzle_type) {\r\n      case \"3x3\":\r\n        var array_1 = this.shuffle();\r\n        var array_2 = this.shuffle();\r\n        var array_3 = this.shuffle();\r\n        var array_4 = this.shuffle();\r\n\r\n        var final_scr = array_1.concat(array_2, array_3, array_4);\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n        var i;\r\n\r\n        // Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(3)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n\r\n      case \"4x4\":\r\n        array_1 = this.shuffle();\r\n        array_2 = this.shuffle();\r\n        array_3 = this.shuffle();\r\n        array_4 = this.shuffle();\r\n        var array_5 = this.shuffle();\r\n        var array_6 = this.shuffle();\r\n        var array_7 = this.shuffle();\r\n        var array_8 = this.shuffle();\r\n\r\n        final_scr = array_1.concat(array_2, array_3, array_4, array_5, array_6, array_7, array_8);\r\n\r\n\r\n        this.removeDuplicates(final_scr);\r\n        this.remove4x4Error(final_scr);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Rw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Rw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Rw2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Lw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Lw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Lw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Uw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Uw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Uw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Dw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Dw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Dw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Fw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Fw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Fw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Bw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Bw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Bw2\"\r\n                  break;\r\n              }\r\n\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      case \"5x5\":\r\n        array_1 = this.shuffle();\r\n        array_2 = this.shuffle();\r\n        array_3 = this.shuffle();\r\n        array_4 = this.shuffle();\r\n        array_5 = this.shuffle();\r\n        array_6 = this.shuffle();\r\n        array_7 = this.shuffle();\r\n        array_8 = this.shuffle();\r\n        var array_9 = this.shuffle();\r\n        var array_10 = this.shuffle();\r\n\r\n        final_scr = array_1.concat(array_2, array_3, array_4, array_5, array_6, array_7, array_8, array_9, array_10);\r\n\r\n\r\n        this.removeDuplicates(final_scr);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"R2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Rw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Rw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Rw2\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"L\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"L\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"L'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"L2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Lw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Lw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Lw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"U\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"U2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Uw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Uw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Uw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"D\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"D2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Dw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Dw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Dw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"F\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"F\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"F'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"F2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Fw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Fw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Fw2\"\r\n                  break;\r\n              }\r\n              break;\r\n\r\n            case \"B\":\r\n              switch (this.getRandomInt(6)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"B\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"B'\"\r\n                  break;\r\n                case 2:\r\n                  final_scr[i] = \"B2\"\r\n                  break;\r\n                case 3:\r\n                  final_scr[i] = \"Bw\"\r\n                  break;\r\n                case 4:\r\n                  final_scr[i] = \"Bw'\"\r\n                  break;\r\n                case 5:\r\n                  final_scr[i] = \"Bw2\"\r\n                  break;\r\n              }\r\n\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      case \"Mega\":\r\n        var m_array_1 = [\"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"R\", \"D\", \"U\"]\r\n        var m_array_2 = m_array_1;\r\n        var m_array_3 = m_array_1;\r\n        var m_array_4 = m_array_1;\r\n        var m_array_5 = m_array_1;\r\n\r\n        final_scr = m_array_1.concat(m_array_2, m_array_3, m_array_4, m_array_5);\r\n\r\n\r\n        //Using RNG to randomly choose how to turn for each move.\r\n        for (i = 0; i < final_scr.length; i++) {\r\n          switch (final_scr[i]) {\r\n            case \"R\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"R++\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"R--\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"D\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"D++\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"D--\"\r\n                  break;\r\n              }\r\n              break;\r\n            case \"U\":\r\n              switch (this.getRandomInt(2)) {\r\n                default:\r\n                  break;\r\n                case 0:\r\n                  final_scr[i] = \"U\"\r\n                  break;\r\n                case 1:\r\n                  final_scr[i] = \"U'\"\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        final_scr = final_scr.join(\" \");\r\n        this.setState({ scramble: final_scr });\r\n        break;\r\n\r\n      default:\r\n        return this.state.scramble;\r\n    }\r\n  }\r\n\r\n\r\n  refreshScramble() {\r\n    setTimeout(this.scramble, 500);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id=\"scramble-container\">\r\n        <Row>\r\n          <Col lg=\"3\" md=\"3\" sm=\"2\" xs=\"2\">\r\n            <Dropdown id=\"scramble-selector\">\r\n              <Dropdown.Toggle variant=\"outline-light\" id=\"dropdown-text\">\r\n                {this.state.puzzle_type}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={this.get3Scramble}> 3x3 </Dropdown.Item>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={this.get4Scramble}> 4x4 </Dropdown.Item>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={this.get5Scramble}> 5x5 </Dropdown.Item>\r\n                <Dropdown.Item id=\"dropdown-text\" onClick={this.getMScramble}> Megaminx </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n\r\n            </Dropdown>\r\n          </Col>\r\n          <Col lg=\"6\" md=\"6\" sm=\"8\" xs=\"8\">\r\n            <p id=\"scramble\">\r\n              {this.state.scramble}\r\n              {this.refreshOnSolve()}\r\n            </p>\r\n          </Col>\r\n          <Col lg=\"3\" md=\"3\" sm=\"2\" xs=\"2\" id=\"refresh-container\">\r\n            <img src={refresh} onClick={this.refreshScramble} id=\"refresh_icon\" alt=\"refresh_button\" />\r\n          </Col>\r\n\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scrambler;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport Stats from './statistics.js';\r\nimport Scrambler from './scrambler.js';\r\nimport ReactTouchEvents from 'react-touch-events';\r\nimport \"./timer.css\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      time: 0,\r\n      start: 0,\r\n      isOn: false,\r\n      result: 0,\r\n      record: [],\r\n      refresh: false,\r\n      width: 0,\r\n    };\r\n\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n    this.handleSpace = this.handleSpace.bind(this)\r\n    this.clearRecord = this.clearRecord.bind(this)\r\n    this.refresh = this.refresh.bind(this)\r\n    this.msToTime = this.msToTime.bind(this)\r\n    this.handleHold = this.handleHold.bind(this)\r\n    this.handleWindowSizeChange = this.handleWindowSizeChange.bind(this)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"resize\", this.handleWindowSizeChange,true);\r\n    document.addEventListener(\"spacebar\", this.handleSpace, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"resize\", this.handleWindowSizeChange,true);\r\n    document.removeEventListener(\"spacebar\", this.handleSpace, true);\r\n  }\r\n\r\n  handleWindowSizeChange() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  handleSpace(e) {\r\n    // Starts timer when spacebar is pressed.\r\n    if (e.keyCode === 32) {\r\n      if (this.state.time === 0) {\r\n        this.startTimer()\r\n        // console.log(\"starttimer called\");  For debugging\r\n      }\r\n      else {\r\n        // Stops timer, wait 0.5s then export and reset.\r\n        this.stopTimer();\r\n        this.setState({ refresh: true });\r\n        setTimeout(this.refresh, 500);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleHold(e) {\r\n    if (this.state.time === 0) {\r\n      setTimeout(this.startTimer(), 1000);\r\n    }\r\n    else {\r\n      this.stopTimer();\r\n      this.setState({ refresh: true });\r\n      setTimeout(this.refresh, 500);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Formatting time to hh:mm:ss.ms format\r\n  msToTime(s) {\r\n    // Pad to 2 or 3 digits, default is 2\r\n    var pad = (n, z = 2) => ('00' + n).slice(-z);\r\n    if (s < 60000) {\r\n      return pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else if (s >= 60000 && s < 3600000) {\r\n      return pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else if (s >= 3600000) {\r\n      return pad(s / 3.6e6 | 0) + ':' + pad((s % 3.6e6) / 6e4 | 0) + ':' + pad((s % 6e4) / 1000 | 0) + '.' + pad(s % 1000, 2) + \"  \";\r\n    }\r\n    else {\r\n      alert(\"Wake up fool! You're taking too long to solve that cube!\");\r\n    }\r\n  }\r\n\r\n  // Function to start timer.\r\n  startTimer() {\r\n    // Starts timing by constantly checking for current time and saving to state.\r\n    this.setState({\r\n      time: this.state.time,\r\n      start: Date.now() - this.state.time,\r\n      isOn: true\r\n    })\r\n\r\n\r\n    this.timer = setInterval(() => this.setState({\r\n      time: this.msToTime(Date.now() - this.state.start)\r\n    }), 1);\r\n\r\n  }\r\n\r\n  // Function to check time passed since finger tap / space pressed.\r\n\r\n  // Refresh and export time.\r\n  refresh() {\r\n    this.setState({ refresh: false });\r\n    this.exportTime();\r\n    this.resetTimer();\r\n  }\r\n\r\n  // Stopping timer.\r\n  stopTimer() {\r\n    this.setState({\r\n      isOn: false,\r\n      refresh: true,\r\n    })\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  // Resetting timer to 0.\r\n  resetTimer() {\r\n    this.setState({\r\n      time: 0,\r\n      refresh: false\r\n    })\r\n  }\r\n\r\n  // Adding time to this.state.record for exporting to Statistics component\r\n  exportTime() {\r\n    this.setState({ record: this.state.record.concat(this.state.time) });\r\n  }\r\n\r\n  // Clearing all times\r\n  clearRecord() {\r\n    this.setState({ record: [] });\r\n  }\r\n\r\n  render() {\r\n    const width = this.state.width;\r\n    const isTouchDevice = width <= 768;\r\n\r\n    if (isTouchDevice) {\r\n      return (\r\n        <div onKeyUp={this.handleSpace} tabIndex=\"0\" id=\"timer-container\">\r\n\r\n          {/* Passing refresh as prop to Scrambler for scramble sequence to refresh when timer stops. */}\r\n          <Row>\r\n            <Scrambler refresh={this.state.refresh} />\r\n          </Row>\r\n          <ReactTouchEvents onTap={this.handleHold}>\r\n            <p id=\"timer-text\"> {this.state.time} </p>\r\n          </ReactTouchEvents>\r\n\r\n          {/* Passing record & clear record to statistics for processing */}\r\n          <Stats record={this.state.record} clearRecord={this.clearRecord} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onKeyUp={this.handleSpace} tabIndex=\"0\" id=\"timer-container\">\r\n          {/* Passing refresh as prop to Scrambler for scramble sequence to refresh when timer stops. */}\r\n          <Row>\r\n            <Scrambler refresh={this.state.refresh} />\r\n          </Row>\r\n          <p id=\"timer-text\"> {this.state.time} </p>\r\n\r\n          {/* Passing record & clear record to statistics for processing */}\r\n          <Stats record={this.state.record} clearRecord={this.clearRecord} />\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport Timer from './Components/timer.js';\r\nimport { Row } from \"react-bootstrap\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div id=\"simplict\">\r\n        <Row>\r\n          <Timer />\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}